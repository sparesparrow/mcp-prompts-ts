# Multi-stage production Dockerfile for MCP Prompts
# This file is used to build the production image

# Stage 1: Build the application
FROM node:20-alpine AS builder
WORKDIR /app
COPY mcp-prompts-ts/. .
COPY mcp-prompts-catalog ./mcp-prompts-catalog
RUN npm ci
RUN npm run build

# ---

# Stage 2: Create the production image
FROM node:20-alpine AS prod
WORKDIR /app

# Copy only production dependencies from the builder stage
COPY --from=builder /app/node_modules ./node_modules

# Copy the compiled code from the builder stage
COPY --from=builder /app/dist ./dist

# Copy package.json for runtime (optional, for health or version info)
COPY mcp-prompts-ts/package.json ./

# Copy other necessary assets
COPY mcp-prompts-ts/docker/health-check.sh /health-check.sh
RUN chmod +x /health-check.sh

# Environment variables
ENV NODE_ENV=production \
    PORT=3003 \
    HOST=0.0.0.0 \
    STORAGE_TYPE=file \
    PROMPTS_DIR=/app/data \
    BACKUPS_DIR=/app/data/backups \
    LOG_LEVEL=info \
    HTTP_SERVER=true

# Create data directory
RUN mkdir -p /app/data && \
    chown -R node:node /app/data

# Set non-root user
USER node

# Expose the port
EXPOSE 3003

# Health check
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 CMD /health-check.sh

# Run the compiled application
CMD ["node", "dist/index.js"] 