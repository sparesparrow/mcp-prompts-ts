# PGAI (PostgreSQL AI) extension for MCP Prompts
# This file adds TimescaleDB with PGAI for vector storage and AI capabilities
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

services:
  # Override the base service to use PGAI
  mcp-prompts:
    environment:
      - STORAGE_TYPE=pgai
      - PGAI_HOST=pgai
      - PGAI_PORT=5432
      - PGAI_USER=postgres
      - PGAI_PASSWORD=postgres
      - PGAI_DATABASE=mcp_prompts
      - PGAI_API_KEY=${PGAI_API_KEY:-your_pgai_key_here}
      - PGAI_COLLECTION=mcp_prompts
    depends_on:
      pgai:
        condition: service_healthy

  # TimescaleDB with PGAI extension
  pgai:
    image: timescale/timescaledb-pgai:pg15
    container_name: mcp-prompts-pgai
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcp_prompts
    volumes:
      - mcp-prompts-pgai-data:/var/lib/postgresql/data
      - ../../docker/postgres/pgai-init:/docker-entrypoint-initdb.d
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - mcp-network

  # Adminer for PGAI database management
  pgai-adminer:
    image: adminer:latest
    container_name: mcp-prompts-pgai-adminer
    ports:
      - '8081:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=pgai
    depends_on:
      - pgai
    restart: unless-stopped
    networks:
      - mcp-network

volumes:
  mcp-prompts-pgai-data:
    name: mcp-prompts-pgai-data

networks:
  mcp-network:
    driver: bridge
